re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(50,0.8, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(40,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(45,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-4, to=8, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red")
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylab=c(0, max(c(density_1, density_2))))
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))))
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
mu <- 7
sigma <- 0.5
x <- seq(from=-5, to=11, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
mu <- 8
sigma <- 0.5
x <- seq(from=-5, to=12, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
x <- 7
z <- (x-mu)/sigma
?pnorm()
p <- 0.877
z <- qnorm(p, mean=0, sd=1)
p <- 0.8621
z <- qnorm(p, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 +0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 - 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
mu <- 8
sigma <- 0.5
p <- 0.877
z <- qnorm(p, mean=mu, sd=sigma)
z <- qnorm(0.8621, mean=mu, sd=sigma)
a1 <- pnorm(7, mean=mu, sd=sigma)
a1 <- pnorm(-1.5, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 - 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a2 <- a1 + 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a1 <- pnorm(6, mean=mu, sd=sigma)
a1 <- pnorm(7.5, mean=mu, sd=sigma)
a1 <- pnorm(7.5, mean=mu, sd=sigma)
a2 <- a1 - 0.0217
z <- qnorm(a2, mean=mu, sd=sigma)
a2 <- a1 + 0.0217
z <- qnorm(a2, mean=mu, sd=sigma)
R.Version()
graphics.off()
rm(list=ls())
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
in_file_name <- "D_C12_10SPLIT_1.CDF"
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/MBWB"
setwd(code_path)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 500:700
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
installed.packages
installed.packages()
scans <- 500
scans <- 500:505
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
in_file_full_name <- paste(file_path, file_name, sep=.Platform$file.sep)
ncid <- open.ncdf(in_file_full_name)
#     print(ncid)
point_count <- get.var.ncdf(ncid, "point_count")
mass_values <- get.var.ncdf(ncid, "mass_values")
intensity_values <- get.var.ncdf(ncid, "intensity_values")
inter_scan_time <- get.var.ncdf(ncid, "inter_scan_time")
scan_count <- length(point_count)
close.ncdf(ncid)
for (i in scans) {
if (i <= scan_count){
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
if (point_start != point_end){
current_scan_mass <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
current_scan_time <- i * inter_scan_time[1]
plot(current_scan_mass, current_intensity_values, type="h")
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
}
readline(prompt="")
} else {
error_message <- paste("Error: scan ", i, " out of range!")
print(error_message)
return(0)
}
}
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
setwd(code_path)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
graphics.off()
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
current_scan_mass <- c(1,2,3)
current_intensity_values <- c(2, 5, 9)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
current_scan_mass <- c(1,2,3)
current_intensity_values <- c(2, 5, 9)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
current_scan_mass <- c(1,2,3)
current_intensity_values <- c(2, 5, 9)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
data_for_gVis <- data.frame(x=rnorm(10), y=rnorm(10))
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
cat("So far, so good")
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
data_for_gVis <- data.frame(x=rnorm(10), y=rnorm(10))
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
data_for_gVis
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 500:505
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
cat("So far, so good")
data_for_gVis
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
data_for_gVis
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
data_for_gVis <- data.frame(x=rnorm(10), y=rnorm(10))
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
length(current_scan_mass)
length(current_intensity_values)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=0, pointSize=2,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
data_for_gVis
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=0, pointSize=2,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
data_for_gVis <- data.frame(x=rnorm(400), y=rnorm(400))
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=0, pointSize=2,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
data_for_gVis[1:4,]
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=0, pointSize=2,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
data_for_gVis
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=0, pointSize=2,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
data_for_gVis
is.numeric(data_for_gVis)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
current_scan_mass[1:5]
current_intensity_values[1:5]
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
current_intensity_value[1:6]
current_intensity_values[1:6]
length(current_intensity_values)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 500:505
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
scans <- 500:501
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
x <- c(1,2,3,4,5,6,7,8,9)
y <- c(2,4,4,2,7,3,9,2,5)
x1 <- rbind(x, x, x)
x1 <- as.vector(x1)
y1 <- rbind(rep(0, length(y)), y, rep(0, length(y)))
y1 <- as.vector(y1)
d <- data.frame(x=x1, y=y1)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=1,
vAxis="{title: 'intensity',
gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z',
gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
cat(paste(5, "\n"))
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
