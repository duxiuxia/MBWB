x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
n <- 100
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(45,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 200
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="PDF", main="normal approx. to binomial (PDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
n <- 200
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(45,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 200
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
f<-function(x){dnorm(x,1.9,0.5)}
plot(f,0,4,xlab="x-axis",ylab="density f(x)")
x<-seq(0,1.4,0.01)
polygon(c(0,x,1.4), c(0,f(x),0), col="lightblue")
22/40
25/38
16/38
10/34
# ADAP-GC
# Get EIC from the raw data
# Written by Xiuxia Du in March 2015.
rm(list=ls())
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/Gas"
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
in_file_name <- "D_C12_10SPLIT_1.CDF"
in_file_full_name <- paste(file_path, in_file_name, sep=.Platform$file.sep)
if( !is.element("ncdf", installed.packages()[,1]) )
install.packages("ncdf")
library("ncdf")
ncid <- open.ncdf(in_file_full_name)
#     print(ncid)
point_count <- get.var.ncdf(ncid, "point_count")
mass_values <- get.var.ncdf(ncid, "mass_values")
intensity_values <- get.var.ncdf(ncid, "intensity_values")
inter_scan_time <- get.var.ncdf(ncid, "inter_scan_time")
scan_count <- length(point_count)
close.ncdf(ncid)
is.numeric(mass_values)
is.numeric(intensity_values)
for (i in 5500:500) {
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_mass_values)
EIC <- split(current_scan, current_scan$current_mass_values)
}
for (i in 500:500) {
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_mass_values)
EIC <- split(current_scan, current_scan$current_mass_values)
}
point_count[499]
current_mass_values
round(4.7)
round(4.1)
current_intensity_values
for (i in 500:500) {
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- round(mass_values[point_start:point_end])
current_intensity_values <- round(intensity_values[point_start:point_end])
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_mass_values)
EIC <- split(current_scan, current_scan$current_mass_values)
}
current_scan[1:10,]
current_mass_values[1:10]
xx <- mass_values[point_start:point_end]
xx[1:10]
i<- 500
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
start <- 1
end <- 50
plot(current_mass_values, current_intensity_values, type="h")
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
end <- 30
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values[start:end]
current_intensity_values[start:end]
start <- 31
end <- 60
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
start <- 61
end <- 90
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
start <- 91
end <- 120
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
start <- 121
end <- 150
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
start <- 151
end <- 180
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
start <- 181
end <- 210
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
start <- 211
end <- 240
plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values[start:end]
current_intensity_values[start:end]
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
#     start <- 211
#     end <- 240
#
#     plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values <- round(mass_values[point_start:point_end])
current_intensity_values <- round(intensity_values[point_start:point_end])
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_mass_values)
xx <-split(current_scan, current_scan$current_mass_values)
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
#     start <- 211
#     end <- 240
#
#     plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values <- round(mass_values[point_start:point_end])
current_intensity_values <- round(intensity_values[point_start:point_end])
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_scan$mz)
EIC <- split(current_scan, current_scan$mz)
EIC
str(EIC, max.level=0)
str(EIC, max.level=1)
getMax <- function(x) {
II <- which(x$abundance == max(x$abundance))
return(x[II,])
}
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
#     start <- 211
#     end <- 240
#
#     plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values <- round(mass_values[point_start:point_end])
current_intensity_values <- round(intensity_values[point_start:point_end])
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_scan$mz)
re <- split(current_scan, current_scan$mz)
re[[1]]
yy<-getMax(re[[1]])
yy
yy <- lapply(re, getMax)
re[[2]]
yy[[2]]
re[[3]]
yy[[3]]
re[[15]]
yy[[15]]
re[[100]]
re[[90]]
yy[[90]]
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
#     start <- 211
#     end <- 240
#
#     plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values <- round(mass_values[point_start:point_end])
current_intensity_values <- intensity_values[point_start:point_end]
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_scan$mz)
re <- split(current_scan, current_scan$mz)
re[[90]]
II <- which(current_mass_values>126 & current_mass_values<128)
II
current_mass_values[215:225]
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
II <- which(current_mass_values>126 & current_mass_values<128)
current_mass_values[215:225]
current_intensity_values[215:225]
getMax <- function(x) {
II <- which(x$abundance == max(x$abundance))
return(x[II[1],])
}
point_start <- sum(point_count[1:i-1])+1
point_end <- sum(point_count[1:i])
current_mass_values <- mass_values[point_start:point_end]
current_intensity_values <- intensity_values[point_start:point_end]
#     start <- 211
#     end <- 240
#
#     plot(current_mass_values[start:end], current_intensity_values[start:end], type="h")
current_mass_values <- round(mass_values[point_start:point_end])
current_intensity_values <- intensity_values[point_start:point_end]
current_scan <- data.frame(mz=current_mass_values, abundance=current_intensity_values)
unique_mz <- unique(current_scan$mz)
re <- split(current_scan, current_scan$mz)
yy <- lapply(re, getMax)
yy
length(yy)
yy[1:10]
yy[1]
yy[2]
re[1]
re[2]
340*9
340*7+305+85
115+417+108+215+1781+204+63
417+108
1781+525
1781+525+215
578+15
0.95/2
qnorm(0.975)
n <- 6
p <- 0.05
x <- 0:n
re <- dbinom(x, size=n, prob=p)
plot(x, re, type="h")
p <- 0.95
re_C13 <- dbinom(x, size=n, prob=p)
plot(x, re, type="h")
p <- 0.95
re_C13 <- dbinom(x, size=n, prob=p)
plot(x, re_C13, type="h")
215+2770+49+525+593+15
5891+802
6730.36-4197.36
3400+340*4
340+160
340+170
?dt
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, re, type="l")
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, re, type="l")
points(x, dnorm(x), type="l", col="red", lwd=2)
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, dnorm(x), type="l", col="red", lwd=2)
points(x, re, type="l")
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, dnorm(x), type="l", col="red", lwd=2)
points(x, re, type="l")
gamma <- 30
points(x, dt(x, df=gamma), type="l", col="green")
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, dnorm(x), type="l", col="red", lwd=2)
points(x, re, type="l", col="black", lwd=1)
gamma <- 30
points(x, dt(x, df=gamma), type="l", col="green", lwd=1)
legend("topright", c("normal", "df=2", "df=30"), col=c("red", "black", "green", lwd=c(2, 1, 1))
)
?legend
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, dnorm(x), type="l", col="red", lwd=2)
points(x, re, type="l", col="black", lwd=1)
gamma <- 30
points(x, dt(x, df=gamma), type="l", col="green", lwd=1)
legend("topright", c("normal", "df=2", "df=30"), col=c("red", "black", "green"), lwd=c(2, 1, 1))
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, dnorm(x), type="l", col="red", lwd=2)
points(x, re, type="l", col="black", lwd=2)
gamma <- 30
points(x, dt(x, df=gamma), type="l", col="green", lwd=2)
legend("topright", c("normal", "df=2", "df=30"), col=c("red", "black", "green"), lwd=c(2, 2, 2))
?dchisq
x <- seq(from=0, to=10, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red")
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
x <- seq(from=0, to=10, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red")
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
graphics.off()
x <- seq(from=0, to=10, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red")
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red")
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red", ylim=c(0, 0.5))
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red", ylim=c(0, 0.5))
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i], lwd=2)
}
legend("topright", leg.txt=c("k=1", "k=2", "k=3", "k=4", "k=6", "k=9"), col=col_vector, lwd=c(2,2,2,2,2,2))
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red", ylim=c(0, 0.5))
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i], lwd=2)
}
legend("topright", c("k=1", "k=2", "k=3", "k=4", "k=6", "k=9"), col=col_vector, lwd=c(2,2,2,2,2,2))
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red", ylim=c(0, 0.5))
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i], lwd=2)
}
legend("topright", c("k=1", "k=2", "k=3", "k=4", "k=6", "k=9"), col=c("red",col_vector), lwd=c(2,2,2,2,2,2))
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red", ylim=c(0, 0.5))
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
legend("topright", c("k=1", "k=2", "k=3", "k=4", "k=6", "k=9"), col=c("red",col_vector), lwd=c(2,2,2,2,2,2))
x <- seq(from=0, to=6, by=0.01)
k <- 1
plot(x, dchisq(x, df=k), type="l", lwd=2, col="red", ylim=c(0, 0.5), main="PDF of chi-squared distribution", xlab="x", ylab="f(x)")
k_vector <- c(2, 3, 4, 6, 9)
col_vector <- c("black", "green", "yellow", "blue", "lightblue")
for (i in 1:length(k_vector)) {
points(x, dchisq(x, df=k_vector[i]), type="l", lwd=2, col=col_vector[i])
}
legend("topright", c("k=1", "k=2", "k=3", "k=4", "k=6", "k=9"), col=c("red",col_vector), lwd=c(2,2,2,2,2,2))
gamma <- 2
x <- seq(from=-5, to=5, by=0.01)
re <- dt(x, df=gamma)
plot(x, dnorm(x), type="l", col="red", lwd=2)
points(x, re, type="l", col="black", lwd=2)
gamma <- 30
points(x, dt(x, df=gamma), type="l", col="green", lwd=2)
legend("topright", c("normal", "df=2", "df=30"), col=c("red", "black", "green"), lwd=c(2, 2, 2))
graphics.off()
rm(list=ls())
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
in_file_name <- "SD_08292013_Weiss_Ret_Pos_08262013_D401.CDF"
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/MBWB"
setwd(code_path)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 801:802
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
Scatter <- gvisScatterChart(women,
options=list(
legend="none",
lineWidth=2, pointSize=0,
title="Women", vAxis="{title:'weight (lbs)'}",
hAxis="{title:'height (in)'}",
width=300, height=300))
plot(Scatter)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
data_for_gVis
chartArea="{width:'85%',height:'80%'}",
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 801:802
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
plot(Scatter)
current_scan_mass <- as.numeric(current_scan_mass)
current_intensity_values <- as.numeric(current_intensity_values)
current_scan_mass <- rbind(current_scan_mass, current_scan_mass, current_scan_mass)
current_scan_mass <- as.vector(current_scan_mass)
current_intensity_values1 <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values[1:length(current_intensity_values)],
rep(0, length(current_intensity_values)))
current_intensity_values1 <- as.vector(current_intensity_values1)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values1)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=1, pointSize=0,
title=paste("scan = ", i),
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
} # if (point_start != point_end)
readline(prompt="")
} else {
error_message <- paste("Error: scan ", i, " out of range!")
data_for_gVis
data_for_gVis[1:5,]
plot(data_for_gVis$x, data_for_gVis$y, type="h")
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 801:802
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 801:801
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
scans <- 801:801
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
scans <- 801:810
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
scans <- 811:811
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 811:811
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
scans <- 811:820
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
