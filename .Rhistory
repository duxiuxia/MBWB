re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h")
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p, xlab="k", ylab="p(k)")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
?pbinom
?pnorm
n <- 60
p <- 0.3
x <- 9
re <- pbinom(q=x, size=n, prob=p)
mu <- n*p
sigma_squared <- n*p*(1-p)
re_appro <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
n <- 600
p <- 0.3
x <- 9
re <- pbinom(q=x, size=n, prob=p)
mu <- n*p
sigma_squared <- n*p*(1-p)
re_appro <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="p(k)", lwd=2)
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="PDF", main="normal approx. to binomial (PDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 9
re <- pbinom(q=x, size=n, prob=p)
mu <- n*p
sigma_squared <- n*p*(1-p)
re_appro <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"), lty=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
?legend
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(50,0.8, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(40,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(45,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-4, to=8, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red")
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylab=c(0, max(c(density_1, density_2))))
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))))
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
mu <- 7
sigma <- 0.5
x <- seq(from=-5, to=11, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
mu <- 8
sigma <- 0.5
x <- seq(from=-5, to=12, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
x <- 7
z <- (x-mu)/sigma
?pnorm()
p <- 0.877
z <- qnorm(p, mean=0, sd=1)
p <- 0.8621
z <- qnorm(p, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 +0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 - 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
mu <- 8
sigma <- 0.5
p <- 0.877
z <- qnorm(p, mean=mu, sd=sigma)
z <- qnorm(0.8621, mean=mu, sd=sigma)
a1 <- pnorm(7, mean=mu, sd=sigma)
a1 <- pnorm(-1.5, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 - 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a2 <- a1 + 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a1 <- pnorm(6, mean=mu, sd=sigma)
a1 <- pnorm(7.5, mean=mu, sd=sigma)
a1 <- pnorm(7.5, mean=mu, sd=sigma)
a2 <- a1 - 0.0217
z <- qnorm(a2, mean=mu, sd=sigma)
a2 <- a1 + 0.0217
z <- qnorm(a2, mean=mu, sd=sigma)
graphics.off()
rm(list=ls())
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
in_file_name <- "D_C12_10SPLIT_1.CDF"
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/MBWB"
setwd(code_path)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 500:501
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
length(current_intensity_values)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
length(current_intensity_values)
current_scan_mass <- rbind(current_scan_mass, current_scan_mass, current_scan_mass)
current_scan_mass <- as.vector(current_scan_mass)
current_intentisy_values <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
length(current_intensity_values)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
length(current_scan_mass)
length(current_intensity_values)
dim(current_scan_mass)
length(current_scan_mass)
plot(current_scan_mass, current_intensity_values, type="h")
current_scan_mass <- as.numeric(current_scan_mass)
current_intensity_values <- as.numeric(current_intensity_values)
length(current_intensity_values)
length(current_scan_mass)
current_scan_mass <- rbind(current_scan_mass, current_scan_mass, current_scan_mass)
current_scan_mass <- as.vector(current_scan_mass)
length(current_scan_mass)
current_intentisy_values <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
length(current_intensity_values)
nrow(current_intensity_values)
rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
length(current_intensity_values)
xx <-rbin(rep(0, 4), 1:4, rep(1, 4))
xx <-rbind(rep(0, 4), 1:4, rep(1, 4))
xx
source(function_file_name)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
length(current_intensity_values)
length(current_intensity_values1)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=0,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
length(current_intensity_values)
length(current_intensity_values1)
current_intentisy_values1 <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
nrow(current_intensity_values1)
rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
is.numeric(current_intensity_values)
xx <                     object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=1,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
current_intensity_value[1:5]
current_intensity_values[1:5]
xx <- rbind(rep(0, length(current_intensity_values)), current_intensity_values, rep(0, length(current_intensity_values)))
xx[1:5,]
xx[,1:5]
current_intensity_values[1:5]
ncol(xx)
nrow(xx)
is.numeric(current_intensity_values)
yy<- rbind(current_intensity_values, current_intensity_values, current_intensity_values)
yy[,1:3]
is.numeric(current_intensity_values)
zz<- as.vector(current_intensity_values)
length(zz)
zz[1:5]
is.numeric(yy)
yy[1,1]
is.list(yy)
is.matrix(yy)
nrow(yy)
ncol(yy)
colnames(yy)
rownames(yy)
current_scan_mass[,1:3]
current_scan_mass[,1:6]
current_scan_mass[1:6]
is.char(current_intensity_values)
is.numeric(current_intensity_values)
View(yy)
View(yy)
length(current_scan_mass)
gg <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
View(gg)
View(gg)
View(gg)
gg
rownames(gg)
rownames(yy)
row.names(yy) <- NULL
rownames(yy)
yy(,1:4)
yy[,1:4]
zz<-as.vector(yy)
length(zz)
source(function_file_name)
source(function_file_name)
scans <- 500:501
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
xx <- rbind(rep(0, length(current_intensity_values)), current_intensity_values, rep(0, length(current_intensity_values)))
current_intensity_values[,1:4]
current_intensity_values[,1:3]
current_intensity_values1[,1:3]
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
current_intensity_values[1:4]
xx <- rbind(rep(0,4), current_intensity_values[1:4], rep(0,4))
xx
yy <- rbind(rep(0,length(current_intensity_values)), current_intensity_values, rep(0,length(current_intensity_values)))
yy[,1:3]
zz <- rbind(rep(0,length(current_intensity_values)), current_intensity_values[1:length(current_intensity_values)], rep(0,length(current_intensity_values)))
zz[,1:3]
source(function_file_name)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
current_intensity_values1 <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values[1:length(current_intensity_values)],
rep(0, length(current_intensity_values)))
current_intensity_values[,1:3]
current_intensity_values1[,1:3]
gg <- rbind(rep(0, length(current_intensity_values)),
current_intensity_values,
rep(0, length(current_intensity_values)))
gg[,1:3]
current_intensity_values1 <- as.vector(current_intensity_values1)
length(current_intensity_values)
length(current_intensity_values1)
data_for_gVis <- data.frame(x=current_scan_mass, y=current_intensity_values1)
object_for_gVis <- gvisScatterChart(data_for_gVis,
options=list(
explorer="{actions: ['dragToZoom', 'rightClickToReset'], maxZoomIn: 0.05}",
chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml: 'True'}",
crosshair="{trigger: 'both'}",
legend="none",
lineWidth=2, pointSize=0,
vAxis="{title: 'intensity', gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z', gridlines: {color: 'transparent'}}",
width=750, height=500
)
)
plot(object_for_gVis)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
scans <- 600:605
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
graphics.off()
rm(list=ls())
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
in_file_name <- "D_C12_10SPLIT_1.CDF"
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/MBWB"
setwd(code_path)
function_file_name <- paste(code_path, "plotMass_RT_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
function_file_name
source(function_file_name)
scans <- 500:700
re <- plotMass_RT_map(file_path=file_path, file_name=in_file_name, scans=scans, allScan=F)
re <- plotMass_RT_gVis_function(file_path=file_path, file_name=in_file_name, scans=scans, allScan=F)
source(function_file_name)
re <- plotMass_RT_gVis_function(file_path=file_path, file_name=in_file_name, scans=scans, allScan=F)
re
