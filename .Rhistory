re_d <- dnorm(x, mean=mu1, sd=sigma1)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, re_d, type="l", col="blue", lwd=2, xlab="x", ylab="f(x)", main="standardization", xlim=c(-9, 4), ylim=c(0, 0.5))
mu2 <- 0
sigma2 <- 1
re_d <- dnorm(x, mean=mu2, sd=sigma2)
points(x, re_d, type="l", col="red", lwd=3)
legend("topright", c(paste("mu=", mu1, ", sigma=", sigma1, sep=""), paste("mu=", mu2, ", sigma=", sigma2, sep="")), col=c("blue", "red"), lty=c(1,1), lwd=c(2,3))
dev.off()
mu1 <- -3
sigma1 <- 2.2
x <- seq(from=-10, to=5, by=0.01)
re_d <- dnorm(x, mean=mu1, sd=sigma1)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, re_d, type="l", col="blue", lwd=2, xlab="x", ylab="f(x)", main="standardization", xlim=c(-10, 4), ylim=c(0, 0.5))
mu2 <- 0
sigma2 <- 1
re_d <- dnorm(x, mean=mu2, sd=sigma2)
points(x, re_d, type="l", col="red", lwd=3)
legend("topright", c(paste("mu=", mu1, ", sigma=", sigma1, sep=""), paste("mu=", mu2, ", sigma=", sigma2, sep="")), col=c("blue", "red"), lty=c(1,1), lwd=c(2,3))
dev.off()
dbinom
?dbinom
n <- 60
p <- 0.3
x <- 0:n
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, red, type="h")
n <- 60
p <- 0.3
x <- 0:n
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h")
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p, xlab="k", ylab="p(k)")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
?pbinom
?pnorm
n <- 60
p <- 0.3
x <- 9
re <- pbinom(q=x, size=n, prob=p)
mu <- n*p
sigma_squared <- n*p*(1-p)
re_appro <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
n <- 600
p <- 0.3
x <- 9
re <- pbinom(q=x, size=n, prob=p)
mu <- n*p
sigma_squared <- n*p*(1-p)
re_appro <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="p(k)", lwd=2)
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="p(k)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_d <- dbinom(x=x, size=n, prob=p)
plot(x, re_d, type="h", xlab="k", ylab="PDF", main="normal approx. to binomial (PDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_dnorm <- dnorm(x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_dnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
dev.off()
n <- 60
p <- 0.3
x <- 9
re <- pbinom(q=x, size=n, prob=p)
mu <- n*p
sigma_squared <- n*p*(1-p)
re_appro <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red")
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"), lty=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend("topright", c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
?legend
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(50,0.8, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(40,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
n <- 60
p <- 0.3
x <- 0:n
pdf("/Users/xdu4/Downloads/binomial.pdf")
re_pbinom <- pbinom(q=x, size=n, prob=p)
plot(x, re_pbinom, type="s", xlab="k", ylab="CDF", lwd=2, main="normal approx. to binomial (CDF)")
mu <- n*p
sigma_squared <- n*p*(1-p)
x <- seq(from=0, to=n, by=0.01)
re_pnorm <- pnorm(q=x, mean=mu, sd=sqrt(sigma_squared))
points(x, re_pnorm, type="l", col="red", lwd=2)
legend(45,0.9, c("binomial", "normal"), col=c("black", "red"), lty=c(1,1), lwd=c(2,2))
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-4, to=8, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red")
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylab=c(0, max(c(density_1, density_2))))
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))))
points(x, density_2, type="l", col="black")
dev.off()
mu <- 5
sigma <- 0.5
x <- seq(from=-5, to=9, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
mu <- 7
sigma <- 0.5
x <- seq(from=-5, to=11, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
mu <- 8
sigma <- 0.5
x <- seq(from=-5, to=12, by=0.1)
density_1 <- dnorm(x, mean=0, sd=1)
density_2 <- dnorm(x, mean=mu, sd=sigma)
pdf("/Users/xdu4/Downloads/normal.pdf")
plot(x, density_1, type="l", col="red", xlab="x", ylab="PDF", xlim=c(min(x), max(x)), ylim=c(0, max(c(density_1, density_2))), lwd=2)
points(x, density_2, type="l", col="black", lwd=2)
dev.off()
x <- 7
z <- (x-mu)/sigma
?pnorm()
p <- 0.877
z <- qnorm(p, mean=0, sd=1)
p <- 0.8621
z <- qnorm(p, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 +0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 - 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
mu <- 8
sigma <- 0.5
p <- 0.877
z <- qnorm(p, mean=mu, sd=sigma)
z <- qnorm(0.8621, mean=mu, sd=sigma)
a1 <- pnorm(7, mean=mu, sd=sigma)
a1 <- pnorm(-1.5, mean=0, sd=1)
a1 <- pnorm(-1.5, mean=0, sd=1)
a2 <- a1 - 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a2 <- a1 + 0.0217
z <- qnorm(p=a2, mean=0, sd=1)
a1 <- pnorm(6, mean=mu, sd=sigma)
a1 <- pnorm(7.5, mean=mu, sd=sigma)
a1 <- pnorm(7.5, mean=mu, sd=sigma)
a2 <- a1 - 0.0217
z <- qnorm(a2, mean=mu, sd=sigma)
a2 <- a1 + 0.0217
z <- qnorm(a2, mean=mu, sd=sigma)
rm(list=ls())
graphics.off()
x <- c(1,2,3)
y <- c(2,4,4)
x1 <- rbind(x, x, x)
x1
x1 <- as.vector(x1)
x1
y1 <- rbind(rep(0, length(y)), y, rep(0, length(y)))
y1
y1 <- as.vector(y1)
y1
installed.packages()
install.packages("googleVis")
d <- data.frame(x=x1, y=y1)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=0, pointSize=5,
vAxis="{title:'Faculty (Total FTE)'}",
hAxis="{title:'Majors (delared and intended)'}",
width=750, height=500))
library(googleVis)
is.element("googleVis", installed.packages()[,1])
x <- installed.packages()
str(x)
x[,1]
x[,2]
x[,3]
x[,4]
dim(x)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=0, pointSize=5,
vAxis="{title:'Faculty (Total FTE)'}",
hAxis="{title:'Majors (delared and intended)'}",
width=750, height=500))
plot(object_for_gVis)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=5,
vAxis="{title:'Faculty (Total FTE)'}",
hAxis="{title:'Majors (delared and intended)'}",
width=750, height=500))
plot(object_for_gVis)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=5,
vAxis="{title: intensity,
gridlines: {color: 'transparent'}}",
hAxis="{title:'Majors (delared and intended)'}",
width=750, height=500))
plot(object_for_gVis)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=5,
vAxis="{title: 'intensity',
gridlines: {color: 'transparent'}}",
hAxis="{title:'Majors (delared and intended)'}",
width=750, height=500))
plot(object_for_gVis)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=5,
vAxis="{title: 'intensity',
gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z',
gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=2,
vAxis="{title: 'intensity',
gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z',
gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
object_for_gVis <- gvisScatterChart(d,
options=list(
explorer="{actions: ['dragToZoom',
'rightClickToReset'],
maxZoomIn:0.05}",
#chartArea="{width:'85%',height:'80%'}",
tooltip="{isHtml:'True'}",
crosshair="{trigger:'both'}",
legend="none", lineWidth=2, pointSize=1,
vAxis="{title: 'intensity',
gridlines: {color: 'transparent'}}",
hAxis="{title: 'm/z',
gridlines: {color: 'transparent'}}",
width=750, height=500))
plot(object_for_gVis)
graphics.off()
rm(list=ls())
library(googleVis)
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/MBWB"
setwd(code_path)
# plot mass vs RT time
function_file_name <- paste(code_path, "plotMass_RT_map.R", sep=.Platform$file.sep)
source(function_file_name
in_file_name <- "D_C12_10SPLIT_1.CDF"
scans <- 500:700
plotSpectra_gVis(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra.gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
in_file_name <- "D_C12_10SPLIT_1.CDF"
scans <- 500:700
plotSpectra_gVis(file_path=file_path, file_name=in_file_name, scans)
plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
in_file_name <- "D_C12_10SPLIT_1.CDF"
scans <- 500:700
plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
function_file_name
source(function_file_name)
scans <- 500:700
re <-plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
getwd()
graphics.off()
rm(list=ls())
file_path <- "/Users/xdu4/Documents/Duxiuxia/Dataset"
in_file_name <- "D_C12_10SPLIT_1.CDF"
library(googleVis)
code_path <- "/Users/xdu4/Documents/Duxiuxia/myGitHub/MBWB"
setwd(code_path)
function_file_name <- paste(code_path, "plotSpectra_gVis_function.R", sep=.Platform$file.sep)
source(function_file_name)
scans <- 500:700
re <-plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
getwd()
function_file_name
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
source(function_file_name)
re <- plotSpectra_gVis_function(file_path=file_path, file_name=in_file_name, scans)
R.Version()
